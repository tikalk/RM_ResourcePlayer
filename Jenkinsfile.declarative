pipeline
{
    options
    {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    agent
    {
        node
        {
            label 'linux-host-slave'
        }
    }
    stages
    {
        stage('SCM: code update')
        {
            steps
            {
                checkout([
                    $class: 'GitSCM', branches: [[name: 'master']],
                    userRemoteConfigs: [[url: 'git@github.com:tikalk/RM_ResourcePlayer.git',credentialsId:'ubuntu']]
                ])
            }
        }
        stage('Docker build')
        {
            steps
            {
                script
                {
                    sh("docker images")
                    sh("df -h")
                    docker.build("rm_resource_player")
                }
            }
        }
        stage('Docker push')
        {
            steps
            {
                script
                {
                    docker.withRegistry('329054710135.dkr.ecr.eu-west-2.amazonaws.com/k8s-fuze', 'ecr:eu-west-2:k8s-aws-ecr')
                    {
                        docker.image("rm_resource_player").push()
                    }
                }
            }
        }
    }
}
